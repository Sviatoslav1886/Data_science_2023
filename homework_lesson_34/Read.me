# Object Detection Web Application with FastAPI and YOLOS

This web application is built using FastAPI and utilizes a machine learning model (specifically, the pre-trained model 'hustvl/yolos-tiny') for object detection in images using YOLOS (You Only Look One-time Object Detection System). It enables users to submit images through a web interface and receive images with bounding boxes overlaid on them, indicating detected objects.

## Main Components

- **FastAPI**: Used to create a web interface and handle HTTP requests.
- **YOLOS model for object detection**: Utilizes YOLOS for object detection, implemented through the transformers library.
- **pydantic BaseModel**: Defines the structure of input data, which in this case is the image file.
- **Prediction processing function (`predict_yolo`)**: Receives uploaded images, performs object detection using YOLOS, overlays bounding boxes and labels on the image, and returns the modified image.
- **Root path processing function (`read_root`)**: A simple function returning a JSON object containing the words "Hello" and "World".
- **Matplotlib and PIL**: Used for image manipulation and visualization.
- **uvicorn**: Used to launch a web server with the FastAPI application.

## Usage

Once the server is running, users can make a POST request to the `/predict/` endpoint by sending an image. The application will respond with the same image, overlaid with bounding boxes and labels representing the detected objects.
